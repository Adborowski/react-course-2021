{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/react-course-2021/react-starter/src/components/Expenses/ExpenseItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  _s();\n\n  const [title, setTitle] = useState(props.title); // ^ this is a REACT HOOK - they can be recognized from the \"use\" keyword\n  // hooks must be called directly inside component functions, and not in nested functions\n  // useState returns an array, which we destructure (0 is value itself, 1 is updating function)\n  // but why is this a const if we're gonna change it?\n  // it's because it's managed somewhere else, and const will only stop us from assigning with the = operator\n\n  const clickHandler = () => {\n    setTitle(\"Updated\");\n    console.log(\"clicked\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n        date: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"EUR \", props.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseItem, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-course-2021/react-starter/src/components/Expenses/ExpenseItem.js"],"names":["React","useState","Card","ExpenseDate","ExpenseItem","props","title","setTitle","clickHandler","console","log","date","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAAlC,CAF2B,CAG3B;AACA;AACA;AACA;AACA;;AAEA,QAAME,YAAY,GAAG,MAAM;AACvBD,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAHD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEL,KAAK,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,2BAA0CD,KAAK,CAACO,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAQ,MAAA,OAAO,EAAEJ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAxBD;;GAAMJ,W;;KAAAA,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport Card from \"../UI/Card\"\nimport ExpenseDate from \"./ExpenseDate\"\nimport \"./ExpenseItem.css\"\n\nconst ExpenseItem = (props) => {\n\n    const [title, setTitle] = useState(props.title); \n    // ^ this is a REACT HOOK - they can be recognized from the \"use\" keyword\n    // hooks must be called directly inside component functions, and not in nested functions\n    // useState returns an array, which we destructure (0 is value itself, 1 is updating function)\n    // but why is this a const if we're gonna change it?\n    // it's because it's managed somewhere else, and const will only stop us from assigning with the = operator\n\n    const clickHandler = () => {\n        setTitle(\"Updated\");\n        console.log(\"clicked\");\n    }\n\n    return(\n        <Card className=\"expense-item\">\n            <div className=\"expense-item__description\">\n                <ExpenseDate date={props.date}/>\n                <h2>{title}</h2>\n                <div className=\"expense-item__price\">EUR {props.price}</div>\n            </div>\n            <button onClick={clickHandler}>Change Title</button>\n        </Card>\n        )\n}\n\nexport default ExpenseItem;"]},"metadata":{},"sourceType":"module"}